# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        board: ['STM32:stm32:Nucleo_64']

    env:
      ARDUINO_IDE_VERSION: 1.8.6
      BOARD: ${{ matrix.board }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      #- name: Setup tmate session
      #  uses: mxschmitt/action-tmate@v3

      # Runs a set of commands using the runners shell
      - name: Run before_install
        run: |
          /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_1.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :1 -ac -screen 0 1280x1024x16
          sleep 3
          export DISPLAY=:1.0
          wget http://downloads.arduino.cc/arduino-$ARDUINO_IDE_VERSION-linux64.tar.xz ;
          tar xf arduino-$ARDUINO_IDE_VERSION-linux64.tar.xz ;
          rm arduino-$ARDUINO_IDE_VERSION-linux64.tar.xz ;
          sudo mv arduino-$ARDUINO_IDE_VERSION /usr/local/share/arduino ;
          sudo ln -s /usr/local/share/arduino/arduino /usr/local/bin/arduino ;

      - name: Run install
        run: |
          mkdir $HOME/Arduino ;
          ln -s $PWD/libraries $HOME/Arduino/libraries ;
          if [[ "$BOARD" =~ "STM32:stm32:" ]]; then
            arduino --pref "boardsmanager.additional.urls=https://github.com/stm32duino/BoardManagerFiles/raw/07bcfb337e4c9abe83a029b39e33ddff5a6df2ef/STM32/package_stm_index.json" --save-prefs ;
            arduino --install-boards STM32:stm32 ;
            arduino --board $BOARD --save-prefs ;
            if [[ "$BOARD" =~ "STM32:stm32:Nucleo_64" ]]; then
              arduino --pref "custom_pnum=Nucleo_64_NUCLEO_L073RZ"  --save-prefs ;
              arduino --pref "custom_opt=Nucleo_64_osstd"           --save-prefs ;
              arduino --pref "custom_rtlib=Nucleo_64_nano"          --save-prefs ;
              arduino --pref "custom_usb=Nucleo_64_CDCgen"          --save-prefs ;
              arduino --pref "custom_xserial=Nucleo_64_none"        --save-prefs ;
              arduino --pref "custom_xusb=Nucleo_64_FS"             --save-prefs ;
            fi ;
            cd $GITHUB_WORKSPACE ;
          fi

      - name: Run script
        run: |
          if [[ "$BOARD" =~ "STM32:stm32:"        ]]; then
            arduino --verify --verbose-build --board $BOARD POST_S76G.ino ;
          fi ;
